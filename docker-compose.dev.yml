version: '3.8'

services:
    frontend:
        build: 
            context: ./frontend
            dockerfile: Dockerfile
        image: frontend-react-dev-portal
        container_name: frontend-container
        restart: unless-stopped
        stdin_open: true
        depends_on: 
            - broadcast-server
            - backend
        volumes: 
            - ./frontend:/app
        networks: 
            - app-network

    nginx:
        image: nginx:stable-alpine
        container_name: nginx-container
        restart: unless-stopped
        ports: 
            - "80:80"
        volumes: 
            - .docker/nginx/default.dev.conf:/etc/nginx/conf.d/default.conf
        networks: 
            - app-network

    backend:
        image: nginx:stable-alpine
        container_name: backend-container
        restart: unless-stopped
        environment: 
            APP_URL: http://localhost
        volumes: 
            - .docker/nginx/default.dev.backend.conf:/etc/nginx/conf.d/default.conf
            - ./backend:/var/www/html
        depends_on:
            - php
            - mariadb
            - redis
            - broadcast-server
        networks:
            - app-network
    
    php:
        build:
            context: ./backend
            dockerfile: Dockerfile
        image: php
        container_name: php-container
        restart: unless-stopped
        working_dir: /var/www/html
        volumes: 
            - ./backend:/var/www/html
        networks: 
            - app-network

    mariadb:
        image: mariadb
        container_name: mariadb-container
        restart: unless-stopped
        environment: 
            MYSQL_DATABASE: bd_ramo
            MYSQL_USER: admin
            MYSQL_PASSWORD: fZsuCu*=T3+HTkXG
            MYSQL_ROOT_PASSWORD: uK%8QDcPu4Byx3ar
        ports: 
            - "3306:3306"
        volumes:
            - .docker/database:/var/lib/mysql
        networks: 
            - app-network
            
    redis:
        image: redis
        restart: unless-stopped
        container_name: redis-container
        volumes: 
            - .docker/redis:/data
        networks: 
            - app-network

    broadcast-server:
        build: 
            context: .docker/echo
            dockerfile: Dockerfile
        image: broadcast-server-portal
        container_name: broadcast-server-container
        restart: unless-stopped
        working_dir: /usr/src/app
        volumes:
            - .docker/echo:/usr/src/app
        depends_on: 
            - redis
        networks: 
            - app-network

    composer:
        image: composer:latest
        container_name: composer-container
        working_dir: /var/www/html
        volumes: 
            - ./backend:/var/www/html
        networks: 
            - app-network

    queue:
        build: 
            context: .
            dockerfile: .docker/scripts/Dockerfile
        container_name: queue-container
        environment: 
            APP_URL: http://localhost
            CONTAINER_ROLE: queue
        volumes: 
            - ./backend:/var/www/html
        depends_on: 
            - backend
        networks: 
            - app-network

    scheduler:
        build: 
            context: .
            dockerfile: .docker/scripts/Dockerfile
        container_name: scheduler-container
        environment: 
            APP_URL: http://localhost
            CONTAINER_ROLE: scheduler
        volumes: 
            - ./backend:/var/www/html
        depends_on: 
            - backend
        networks: 
            - app-network

    artisan:
        build: 
            context: ./backend
            dockerfile: Dockerfile
        image: artisan-portal
        container_name: artisan-container
        volumes:
            - ./backend:/var/www/html
        depends_on:
            - mariadb
        working_dir: /var/www/html
        entrypoint: ['php', 'artisan']
        networks:
            - app-network

networks:
    app-network:
        driver: bridge