version: '3.8'

services:
    frontend:
        build: 
            context: ./frontend
            dockerfile: Dockerfile
        image: frontend-react-dev-portal
        container_name: frontend-container
        restart: unless-stopped
        stdin_open: true
        ports:
            - "3000:3000"
        volumes: 
            - ./frontend:/app
        networks: 
            - app-network

    php:
        build:
            context: ./backend
            dockerfile: Dockerfile
        image: php-portal
        container_name: php-container
        restart: unless-stopped
        working_dir: /var/www/html
        volumes: 
            - ./backend:/var/www/html
        networks: 
            - app-network

    server:
        image: nginx:stable-alpine
        container_name: server-container
        restart: unless-stopped
        ports: 
            - "8000:80"
        volumes: 
            - ./backend:/var/www/html
            - ./backend/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on: 
            - frontend
            - mariadb
            - redis
            - broadcast-server
            - php
        networks:
            - app-network

    mariadb:
        image: mariadb
        container_name: mariadb-container
        restart: unless-stopped
        environment: 
            MYSQL_ROOT_PASSWORD: ramoi3ecefetrj
            MYSQL_DATABASE: bd_ramo
        ports: 
            - "3306:3306"
        volumes:
            - .docker/database:/var/lib/mysql
        networks: 
            - app-network
            
    redis:
        image: redis
        restart: unless-stopped
        container_name: redis-container
        volumes: 
            - .docker/redis:/data
        networks: 
            - app-network

    broadcast-server:
        build: 
            context: ./backend/echo
            dockerfile: Dockerfile
        image: broadcast-server-portal
        container_name: broadcast-server-container
        restart: unless-stopped
        working_dir: /usr/src/app
        ports: 
            - "6001:6001"
        volumes:
            - ./backend/echo:/usr/src/app
        depends_on: 
            - redis
        networks: 
            - app-network

    composer:
        image: composer:latest
        container_name: composer-container
        working_dir: /var/www/html
        volumes: 
            - ./backend:/var/www/html
        depends_on: 
            - php
        networks: 
            - app-network

    queue:
        build: 
            context: ./backend
            dockerfile: ./start/Dockerfile
        image: queue-scheduler-portal
        container_name: queue-container
        environment: 
            CONTAINER_ROLE: queue
        volumes: 
            - ./backend:/var/www/html
        depends_on: 
            - server
        networks: 
            - app-network

    scheduler:
        build: 
            context: ./backend
            dockerfile: ./start/Dockerfile
        image: queue-scheduler-portal
        container_name: scheduler-container
        environment: 
            CONTAINER_ROLE: scheduler
        volumes: 
            - ./backend:/var/www/html
        depends_on: 
            - server
        networks: 
            - app-network

    artisan:
        image: php-portal
        container_name: artisan-container
        volumes:
            - ./backend:/var/www/html
        depends_on:
            - mariadb
        working_dir: /var/www/html
        entrypoint: ['php', 'artisan']
        networks:
            - app-network

networks:
    app-network:
        driver: bridge