version: '3'

services:
    frontend:
        build: 
            context: .
            dockerfile: .docker/nginx/Dockerfile
        image: frontend-react-prod-portal
        container_name: frontend-container
        restart: unless-stopped
        ports:
            - "200.9.149.166:80:80"
            - "200.9.149.166:443:443"
        volumes: 
            - .docker/nginx/default.prod.conf:/etc/nginx/conf.d/default.conf
            - .docker/nginx/certbot/conf:/etc/letsencrypt
            - .docker/nginx/certbot/www:/var/www/certbot
        depends_on:
            - backend
            - broadcast-server
        networks: 
            - app-network

    certbot:
        image: certbot/certbot
        container_name: certbot-container
        restart: unless-stopped 
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
        volumes:
            - .docker/nginx/certbot/conf:/etc/letsencrypt
            - .docker/nginx/certbot/www:/var/www/certbot
            - .docker/nginx/certbot/letsencrypt:/var/lib/letsencrypt
        depends_on: 
            - frontend
        networks: 
            - app-network

    backend:
        build: 
            context: .
            dockerfile: .docker/apache/Dockerfile
        image: backend-portal-prod
        container_name: backend-container
        restart: unless-stopped
        environment: 
            APP_URL: https://portaldoramo.cefet-rj.br
            APP_ENV: production
            CONTAINER_ROLE: server
        volumes: 
            - ./backend:/var/www/html
        depends_on: 
            - mariadb
            - redis
            - broadcast-server
        networks:
            - app-network

    mariadb:
        image: mariadb:10.5
        container_name: mariadb-container
        restart: unless-stopped
        environment: 
            MYSQL_DATABASE: bd_ramo
            MYSQL_USER: admin
            MYSQL_PASSWORD: fZsuCu*=T3+HTkXG
            MYSQL_ROOT_PASSWORD: uK%8QDcPu4Byx3ar
        volumes:
            - .docker/database:/var/lib/mysql
        networks: 
            - app-network
            
    redis:
        image: redis:6.0.6-alpine
        restart: unless-stopped
        container_name: redis-container
        command: ["redis-server", "--requirepass", "fZsuCu*=T3+HTkXG"]
        volumes: 
            - .docker/redis:/data
        networks: 
            - app-network

    broadcast-server:
        build: 
            context: .docker/echo
            dockerfile: Dockerfile
        image: broadcast-server-portal
        container_name: broadcast-server-container
        restart: unless-stopped
        working_dir: /usr/src/app
        volumes:
            - .docker/echo:/usr/src/app
        depends_on: 
            - redis
        networks: 
            - app-network

    composer:
        image: composer:2.0
        container_name: composer-container
        working_dir: /var/www/html
        volumes: 
            - ./backend:/var/www/html
        networks: 
            - app-network

    queue:
        image: backend-portal-prod
        container_name: queue-container
        environment: 
            APP_URL: https://portaldoramo.cefet-rj.br
            APP_ENV: production
            CONTAINER_ROLE: queue
        volumes: 
            - ./backend:/var/www/html
        depends_on: 
            - backend
        networks: 
            - app-network

    scheduler:
        image: backend-portal-prod
        container_name: scheduler-container
        environment: 
            APP_URL: https://portaldoramo.cefet-rj.br
            APP_ENV: production
            CONTAINER_ROLE: scheduler
        volumes: 
            - ./backend:/var/www/html
        depends_on: 
            - backend
        networks: 
            - app-network

    artisan:
        build: 
            context: ./backend
            dockerfile: Dockerfile
        image: artisan-portal
        container_name: artisan-container
        volumes:
            - ./backend:/var/www/html
        depends_on:
            - mariadb
        working_dir: /var/www/html
        entrypoint: ['php', 'artisan']
        networks:
            - app-network

networks:
    app-network:
        driver: bridge